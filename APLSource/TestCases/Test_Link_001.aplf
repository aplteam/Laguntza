 R←Test_Link_001(stopFlag batchFlag);⎕TRAP;ref;html;filename;brokenLinks;ambiguousLinks;noOf;has
⍝ Test for three links buried in a code block
⍝ R gets one of: 0=Okay, 1=test case failed, ¯1=test case was not executed due to the "batchFlag"
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 R←T._Failed

 #.⎕SHADOW'TestHelp'
 'TestHelp'#.⎕NS''
 #.TestHelp.Page←''
 #.TestHelp.Page,←⊂'# A topic'
 #.TestHelp.Page,←⊂'This topic _contains_ a table with links.'
 #.TestHelp.Page,←⊂'|Styling Tag|Meaning|'
 #.TestHelp.Page,←⊂'|Bold|Embolden the text.|'
 #.TestHelp.Page,←⊂'|Italic|Italicize the text.|'
 #.TestHelp.Page,←⊂'|Underline|Underline the text.|'
 #.TestHelp.Page,←⊂'|Invalid link:|`→[↑*.Topic2]`|'
 #.TestHelp.Page,←⊂'|Invalid link|→[Topic2]|'
 #.TestHelp.Page,←⊂'|Invalid link|→[Unknown]|'
 ref←StartHelp 0        ⍝ Default

 ∆Process ref
 brokenLinks←¯1 ##.Laguntza.Lint_.CheckBrokenLinks ref
 →T.GoToTidyUp 3≠≢brokenLinks                                   ⍝ We expect 2 broken links plus one header line
 ambiguousLinks←¯1 ##.Laguntza.Lint_.CheckAmbiguousLinks ref
 →T.GoToTidyUp 0≠≢ambiguousLinks                                ⍝ We expect no ambiguous link
 filename←##.Laguntza.BuildDocFromAllPages ref
 html←'flat'##.APLTreeUtils.ReadUtf8File filename

 noOf←2 ⍝ There is one application of italic ...
 has←+/¨html∘{+/⍵⍷⍺}¨'<em>' '</em>'
 →T.GoToTidyUp≠/has
 →T.GoToTidyUp noOf≠+/has

 noOf←0 ⍝ There is no application of bold ...
 has←+/¨html∘{+/⍵⍷⍺}¨'<strong>' '</strong>'
 →T.GoToTidyUp≠/has
 →T.GoToTidyUp noOf≠+/has

 R←T._OK
∆TidyUp:
 ##.Laguntza.Reset
 ⎕EX'#.TestHelp'
