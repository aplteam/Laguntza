 R←Test_306(stopFlag batchFlag);⎕TRAP;ref;html;filename;brokenLinks;ambiguousLinks;noOf;has
⍝ Test for an ambiguous link.
⍝ R gets one of: 0=Okay, 1=test case failed, ¯1=test case was not executed due to the "batchFlag"
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 R←∆Failed

 #.⎕SHADOW'TestHelp'
 'TestHelp'#.⎕NS''
 'Sub1'#.TestHelp.⎕NS''
 #.TestHelp.Sub1.Hello←'# Sub 1' '' '...'
 'Sub2'#.TestHelp.⎕NS''
 #.TestHelp.Sub2.Hello←'# Sub 1' '' '...'
 #.TestHelp.Page←''
 #.TestHelp.Page,←⊂'# A Topic'
 #.TestHelp.Page,←⊂''
 #.TestHelp.Page,←⊂'This link →[*.Hello] is ambiguous'
 ref←StartHelp 0        ⍝ Default

 ∆Process ref
 brokenLinks←¯1 ##.Markdown2Help.Lint_.CheckBrokenLinks ref
 →GoToTidyUp~0∊⍴brokenLinks                                  ⍝ We expect no broken links
 ambiguousLinks←¯1 ##.Markdown2Help.Lint_.CheckAmbiguousLinks ref
 →GoToTidyUp~2∊⍴ambiguousLinks                                ⍝ We expect one ambiguous link

 ##.FilesAndDirs.DeleteFile ref.∆tempFilename

 filename←##.Markdown2Help.BuildDocFromAllPages ref
 html←'flat'#.APLTreeUtils.ReadUtf8File filename
 noOf←0 ⍝ There is no application of italic ...
 noOf+←2×+/html∘{+/⍵⍷⍺}'Invalid link'
 noOf+←2×+/html∘{+/⍵⍷⍺}'Ambiguous link'
 has←+/¨html∘{+/⍵⍷⍺}¨'<em>' '</em>'
 →GoToTidyUp≠/has
 →GoToTidyUp noOf≠+/has
 has←+/¨html∘{+/⍵⍷⍺}¨'<strong>' '</strong>'
 →GoToTidyUp≠/has
 →GoToTidyUp noOf≠+/has
 ##.FilesAndDirs.DeleteFile filename

 R←∆OK
∆TidyUp:
 ##.Markdown2Help.Reset
 ⎕EX'#.TestHelp'
